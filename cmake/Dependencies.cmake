SET(SINGA_LINKER_LIBS "")

#INCLUDE("cmake/ProtoBuf.cmake")

FIND_PACKAGE( Protobuf REQUIRED )
INCLUDE_DIRECTORIES(SYSTEM ${PROTOBUF_INCLUDE_DIR})
MESSAGE(STATUS "proto libs " ${PROTOBUF_LIBRARIES})
LIST(APPEND singa_linker_libs ${PROTOBUF_LIBRARIES})

IF(USE_LMDB)
    FIND_PACKAGE(LMDB REQUIRED)
    INCLUDE_DIRECTORIES(SYSTEM ${LMDB_INCLUDE_DIR})
    LIST(APPEND SINGA_LINKER_LIBS ${LMDB_LIBRARIES})
    MESSAGE(STATUS "FOUND lmdb at ${LMDB_INCLUDE_DIR}")
ENDIF()

IF(NOT CPU_ONLY)
    INCLUDE("cmake/Cuda.cmake")
ELSE()
    SET(USE_CUDA FALSE)
    SET(USE_CUDNN FALSE)
ENDIF()

IF(USE_CBLAS)
    FIND_PACKAGE(CBLAS REQUIRED)
    INCLUDE_DIRECTORIES(SYSTEM ${CBLAS_INCLUDE_DIR})
    LIST(APPEND SINGA_LINKER_LIBS ${CBLAS_LIBRARIES})
    MESSAGE(STATUS "FOUND cblas at ${CBLAS_LIBRARIES}")
ENDIF()

FIND_PACKAGE(Glog REQUIRED)
INCLUDE_DIRECTORIES(SYSTEM ${GLOG_INCLUDE_DIRS})
LIST(APPEND SINGA_LINKER_LIBS ${GLOG_LIBRARIES})
#MESSAGE(STATUS "Found glog at ${GLOG_INCLUDE_DIRS}")

#LIST(APPEND SINGA_LINKER_LIBS "/home/wangwei/local/lib/libopenblas.so")
#MESSAGE(STATUS "link lib : " ${SINGA_LINKER_LIBS})
